"""LCM type definitions
This file automatically generated by lcm.
DO NOT MODIFY BY HAND!!!!
"""

try:
    import cStringIO.StringIO as BytesIO
except ImportError:
    from io import BytesIO
import struct

class footstep_params_t(object):
    __slots__ = ["utime", "step_speed", "drake_min_hold_time", "step_height", "constrain_full_foot_pose", "bdi_step_duration", "bdi_sway_duration", "bdi_lift_height", "bdi_toe_off", "bdi_knee_nominal", "bdi_max_body_accel", "bdi_max_foot_vel", "bdi_sway_end_dist", "bdi_step_end_dist", "ihmc_transfer_time", "ihmc_swing_time", "mu", "drake_instep_shift", "support_contact_groups", "prevent_swing_undershoot", "prevent_swing_overshoot"]

    SUPPORT_GROUPS_HEEL_TOE = 0
    SUPPORT_GROUPS_MIDFOOT_TOE = 1
    SUPPORT_GROUPS_HEEL_MIDFOOT = 2

    def __init__(self):
        self.utime = 0
        self.step_speed = 0.0
        self.drake_min_hold_time = 0.0
        self.step_height = 0.0
        self.constrain_full_foot_pose = False
        self.bdi_step_duration = 0.0
        self.bdi_sway_duration = 0.0
        self.bdi_lift_height = 0.0
        self.bdi_toe_off = 0
        self.bdi_knee_nominal = 0.0
        self.bdi_max_body_accel = 0.0
        self.bdi_max_foot_vel = 0.0
        self.bdi_sway_end_dist = 0.0
        self.bdi_step_end_dist = 0.0
        self.ihmc_transfer_time = 0.0
        self.ihmc_swing_time = 0.0
        self.mu = 0.0
        self.drake_instep_shift = 0.0
        self.support_contact_groups = 0
        self.prevent_swing_undershoot = False
        self.prevent_swing_overshoot = False

    def encode(self):
        buf = BytesIO()
        buf.write(footstep_params_t._get_packed_fingerprint())
        self._encode_one(buf)
        return buf.getvalue()

    def _encode_one(self, buf):
        buf.write(struct.pack(">qfffbfffifffffffffbbb", self.utime, self.step_speed, self.drake_min_hold_time, self.step_height, self.constrain_full_foot_pose, self.bdi_step_duration, self.bdi_sway_duration, self.bdi_lift_height, self.bdi_toe_off, self.bdi_knee_nominal, self.bdi_max_body_accel, self.bdi_max_foot_vel, self.bdi_sway_end_dist, self.bdi_step_end_dist, self.ihmc_transfer_time, self.ihmc_swing_time, self.mu, self.drake_instep_shift, self.support_contact_groups, self.prevent_swing_undershoot, self.prevent_swing_overshoot))

    def decode(data):
        if hasattr(data, 'read'):
            buf = data
        else:
            buf = BytesIO(data)
        if buf.read(8) != footstep_params_t._get_packed_fingerprint():
            raise ValueError("Decode error")
        return footstep_params_t._decode_one(buf)
    decode = staticmethod(decode)

    def _decode_one(buf):
        self = footstep_params_t()
        self.utime, self.step_speed, self.drake_min_hold_time, self.step_height = struct.unpack(">qfff", buf.read(20))
        self.constrain_full_foot_pose = bool(struct.unpack('b', buf.read(1))[0])
        self.bdi_step_duration, self.bdi_sway_duration, self.bdi_lift_height, self.bdi_toe_off, self.bdi_knee_nominal, self.bdi_max_body_accel, self.bdi_max_foot_vel, self.bdi_sway_end_dist, self.bdi_step_end_dist, self.ihmc_transfer_time, self.ihmc_swing_time, self.mu, self.drake_instep_shift, self.support_contact_groups = struct.unpack(">fffifffffffffb", buf.read(53))
        self.prevent_swing_undershoot = bool(struct.unpack('b', buf.read(1))[0])
        self.prevent_swing_overshoot = bool(struct.unpack('b', buf.read(1))[0])
        return self
    _decode_one = staticmethod(_decode_one)

    _hash = None
    def _get_hash_recursive(parents):
        if footstep_params_t in parents: return 0
        tmphash = (0x14a457fbec8237b9) & 0xffffffffffffffff
        tmphash  = (((tmphash<<1)&0xffffffffffffffff)  + (tmphash>>63)) & 0xffffffffffffffff
        return tmphash
    _get_hash_recursive = staticmethod(_get_hash_recursive)
    _packed_fingerprint = None

    def _get_packed_fingerprint():
        if footstep_params_t._packed_fingerprint is None:
            footstep_params_t._packed_fingerprint = struct.pack(">Q", footstep_params_t._get_hash_recursive([]))
        return footstep_params_t._packed_fingerprint
    _get_packed_fingerprint = staticmethod(_get_packed_fingerprint)

